This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by configure, which was
generated by GNU Autoconf 2.62.  Invocation command line was

  $ ./configure 

## --------- ##
## Platform. ##
## --------- ##

hostname = NEOIII
uname -m = i386
uname -r = 1
uname -s = OS/2
uname -v = 2.45

/usr/bin/uname -p = unknown
/bin/uname -X     = unknown

/bin/arch              = unknown
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
/usr/bin/hostinfo      = unknown
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH: U:\foo
PATH: U:\usr\bin
PATH: U:\usr\local\bin
PATH: U:\GLIBIDL335\GLIB\gcc\bin
PATH: U:\GLIBIDL335\LIBIDL\gcc\bin
PATH: u:\PERL\bin
PATH: u:\bin
PATH: U:\MOZTOOLS
PATH: U:\EMX\bin
PATH: u:\extras\bin
PATH: u:\dev\qt\trunk\bin
PATH: u:\python25
PATH: u:\dev\ow\BINP
PATH: u:\dev\ow\BINW
PATH: C:\MPTN\BIN
PATH: C:\TCPIP\BIN
PATH: C:\IBMCOM
PATH: C:\IBMLAN\NETPROG
PATH: C:\MUGLIB
PATH: C:\ECS\BIN
PATH: C:\EMX\BIN
PATH: C:\IBMGSK50\BIN
PATH: C:\IBMGSK40\BIN
PATH: C:\IBMGSK\BIN
PATH: C:\OS2
PATH: C:\OS2\SYSTEM
PATH: C:\OS2\INSTALL
PATH: C:\
PATH: C:\OS2\MDOS
PATH: C:\OS2\APPS
PATH: C:\ECS\KLIBC\BIN
PATH: C:\PROGRAMS\JAVA142\BIN
PATH: C:\MMOS2\FREEDB
PATH: C:\MMOS2
PATH: C:\MMOS2\MMPLAYER
PATH: C:\PROGRAMS\4OS2
PATH: C:\PROGRAMS\VyperHelp
PATH: C:\PROGRAMS\ibmworks
PATH: E:\VTEX\BIN
PATH: e:\mmedia\cworks2
PATH: D:\ODIN\SYSTEM32
PATH: C:\TOOLS\CDRTools


## ----------- ##
## Core tests. ##
## ----------- ##

configure:1908: loading site script u:/moztools/config.site-gcc335b4
| #!sh
| #ac_cv_host=i386-pc-gnu
| #ac_cv_host=i386-pc-os2
| #HOST=i386-pc-os2
| SHELL=sh
| PATH=`cmd.exe /c "echo %PATH%" | sed -e 's@\\\\@/@g'`
| PATH_SEPARATOR=';'
| 
| for f in INSTALL PERL M4 EXPR ; do
|  export $f="`type $f.exe|sed -e 's@\\\\@/@g' -e 's@.* @@'`"
| done
| 
| ac_cv_path_PERL='u:/Perl/bin/perl.exe'
| ac_cv_path__PATH_PERL='u:/Perl/bin/perl.exe'
| ac_cv_path__PATH_SH='/moztools/ash.exe'
| ac_cv_path__PATH_SED='/moztools/sed.exe'
| ac_cv_path_PROG_SENDMAIL='e:/tcpip/bin/sendmail.exe'
| ac_cv_path__PATH_SORT='/moztools/sort.exe'
| ac_cv_path_AR='/usr/bin/ar.exe'
| ac_cv_path_FALSE='/bin/false.exe'
| ac_cv_path_GZIP='e:/ecs/bin/gzip.exe'
| ac_cv_path_ZIP='e:/ecs/bin/zip.exe'
| ac_cv_path_MAKE='/moztools/make.exe'
| ac_cv_path_TRUE='/bin/true.exe'
| ac_cv_path_RM='/bin/rm.exe'
| ac_cv_path_MV='/bin/mv.exe'
| ac_cv_member_struct_sockaddr_in_sin_len='yes'
| ac_cv_path_MKDIR='/bin/mkdir.exe'
| ac_cv_path_MSGFMT='/usr/bin/msgfmt.exe'
| ac_cv_path__PATH_AWK='/moztools/awk.exe'
| ac_cv_path__PATH_EGREP='e:/emx/bin/egrep.exe'
| ac_cv_path_install=${INSTALL}
| ac_cv_path_STRIP='echo '
| ac_cv_path_uic='/dev/qt/trunk/bin/uic.exe'
| ac_cv_path_XARGS='/moztools/xargs.exe'
| ac_cv_path_JAVAC='e:/programs/java142/bin/javac.exe'
| ac_cv_path_JAR='e:/programs/java142/bin/jar.exe'
| #ac_cv_prog_LN_S='cp -p'
| ac_cv_emxos2='yes'
| ac_cv_libext='lib'
| #cl_cv_prog_LN_S='cp -p'
| #cl_cv_prog_LN='cp -p'
| ac_executable_extensions=".exe"
| ac_cpp=g++.exe
| #LN_S='cp -p'
| MAKE=make
| #ACLOCAL=${ACLOCAL-"${UNIXROOT}/usr/bin/aclocal"}
| #AUTOCONF=${AUTOCONF-"${UNIXROOT}/usr/bin/autoconf"}
| #AUTOMAKE=${AUTOMAKE-"${UNIXROOT}/usr/bin/automake"}
| #AUTOHEADER=${AUTOHEADER-"${UNIXROOT}/usr/bin/autoheader"}
| #ACLOCAL='echo aclocal'
| #AUTOCONF='echo autoconf'
| #AUTOMAKE='echo automake'
| #AUTOHEADER='echo autoheader'
| MAKEINFO=${MAKEINFO-"makeinfo --no-split"}
| AMTAR=${AMTAR-"tar.exe"}
| CC=gcc
| CXX=g++
| AWK=gawk
| LEX=flex
| LIBEXT="LIB"
| #INSTALL=install-sh
| INSTALL=/bin/install.exe
| OBJEXT=o
| RM=rm.exe
| PERL=perl.exe
| AR=ar.exe
| LD=ld.exe
| RANLIB=echo
| #LIBTOOL=aplibtool.exe
| YACC='bison -y'
| BMTYPE=int
| BMBYTES=4
| PRINTABLE_OS_NAME=OS/2
| #CFLAGS='-D__EMX__ -DOS2  -D__ST_MT_ERRNO__ -g'
| #CXXFLAGS='-D__EMX__ -DOS2 -D__ST_MT_ERRNO__ -g'
| #LDFLAGS='-Zexe -Zomf -Zmap -Zargs-wild -D__ST_MT_ERRNO__'
| #CFLAGS='-D__EMX__ -DOS2  -D__ST_MT_ERRNO__ -O3 -mcpu=pentium3'
| #CXXFLAGS='-D__EMX__ -DOS2 -D__ST_MT_ERRNO__ -O3 -mcpu=pentium3'
| #LDFLAGS='-Zexe -Zomf -Zmap -Zargs-wild -Zbin-files -D__ST_MT_ERRNO__ -s'
| CFLAGS='-D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3'
| CXXFLAGS='-D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3'
| LDFLAGS='-Zexe -Zomf -Zmap -Zargs-wild -Zbin-files -D__ST_MT_ERRNO__ -s'
| ac_exeext=.exe
| ac_cv_exeext=.exe
| ac_cv_path___CHGRP=echo
| ac_cv_path___CHOWN=echo
| ac_cv_path___RSH=echo
| function test
| { 
|   if [  "$1" = "-x" ] ; then  
|     shift
|     if [ -f "$1" ] ; then return ; fi
|     if type $1.cmd 1>nul 2>&1  ; then  return ; fi
|     if type $1.exe 1>nul 2>&1  ; then  return ; fi
|     x=`type $* 1>nul 2>&1|  sed -e 's@^.* @@' -e 's@\\\\@/@g' -e 's@\\.$@@'`
|     if [ -n "$x" ] ; then
|       grep '^\(#!\|[ \t]*extproc\)' "$x">nul 2>&1 
|     else
|       return 1
|     fi
|   else
|     builtin test "$@"
|   fi ;\
| }
| 
| 
| ### EOF ######################################################################
configure:2111: checking for a BSD-compatible install
configure:2179: result: /bin/install.exe
configure:2190: checking whether build environment is sane
configure:2233: result: yes
configure:2258: checking for a thread-safe mkdir -p
configure:2297: result: u:/bin/mkdir.exe -p
configure:2310: checking for gawk
configure:2337: result: gawk
configure:2348: checking whether make sets $(MAKE)
configure:2370: result: yes
configure:2609: checking for gcc
configure:2636: result: gcc
configure:2874: checking for C compiler version
configure:2882: gcc --version >&5
gcc (GCC) 3.3.5 (Bird Build 2007-06-10 14:30)
Copyright (C) 2003 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

configure:2886: $? = 0
configure:2893: gcc -v >&5
Reading specs from U:/usr/lib/gcc-lib/i386-pc-os2-emx/3.3.5/specs
Configured with: D:/CODING/LIBC/SVN/BRANCHES/LIBC-0.6/src/gcc/configure --enable-clh --enable-threads=os2 --enable-shared=libgcc,bfd,opcodes --enable-nls --without-included-gettext --with-local-prefix=D:/CODING/LIBC/SVN/BRANCHES/LIBC-0.6/TOOLS/x86.os2/gcc/staged --prefix=/gcc --with-gnu-as --disable-libgcj --enable-languages=c,c++
Thread model: os2
gcc version 3.3.5 (Bird Build 2007-06-10 14:30)
configure:2897: $? = 0
configure:2904: gcc -V >&5
gcc: `-V' must come at the start of the command line
configure:2908: $? = 1
configure:2931: checking for C compiler default output file name
configure:2953: gcc -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  -Zexe -Zomf -Zmap -Zargs-wild -Zbin-files -D__ST_MT_ERRNO__ -s conftest.c  >&5
configure:2957: $? = 0
configure:2995: result: conftest.exe
configure:3012: checking whether the C compiler works
configure:3022: ./conftest.exe
configure:3026: $? = 0
configure:3043: result: yes
configure:3050: checking whether we are cross compiling
configure:3052: result: no
configure:3055: checking for suffix of executables
configure:3062: gcc -o conftest.exe -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  -Zexe -Zomf -Zmap -Zargs-wild -Zbin-files -D__ST_MT_ERRNO__ -s conftest.c  >&5
configure:3066: $? = 0
configure:3090: result: .exe
configure:3096: checking for suffix of object files
configure:3122: gcc -c -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  conftest.c >&5
configure:3126: $? = 0
configure:3149: result: o
configure:3153: checking whether we are using the GNU C compiler
configure:3182: gcc -c -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  conftest.c >&5
configure:3189: $? = 0
configure:3206: result: yes
configure:3215: checking whether gcc accepts -g
configure:3245: gcc -c -g  conftest.c >&5
configure:3252: $? = 0
configure:3353: result: yes
configure:3370: checking for gcc option to accept ISO C89
configure:3444: gcc  -c -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  conftest.c >&5
configure:3451: $? = 0
configure:3474: result: none needed
configure:3503: checking for style of include used by make
configure:3531: result: GNU
configure:3556: checking dependency style of gcc
configure:3647: result: none
configure:3667: checking how to run the C preprocessor
configure:3707: gcc -E  conftest.c
configure:3714: $? = 0
configure:3745: gcc -E  conftest.c
conftest.c:10:28: ac_nonexistent.h: No such file or directory
configure:3752: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.6"
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:3785: result: gcc -E
configure:3814: gcc -E  conftest.c
configure:3821: $? = 0
configure:3852: gcc -E  conftest.c
conftest.c:10:28: ac_nonexistent.h: No such file or directory
configure:3859: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.6"
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:3903: checking build system type
configure:3921: result: i386-pc-os2-emx
configure:3943: checking host system type
configure:3958: result: i386-pc-os2-emx
configure:3980: checking host platform
configure:3999: result: i386-pc-os2-emx
configure:4018: checking for a BSD-compatible install
configure:4086: result: /bin/install.exe
configure:4123: checking for a sed that does not truncate output
configure:4189: result: U:/MOZTOOLS/sed.exe
configure:4207: checking for grep that handles long lines and -e
configure:4267: result: U:/MOZTOOLS/grep.exe
configure:4272: checking for egrep
configure:4336: result: U:/MOZTOOLS/grep.exe -E
configure:4341: checking for fgrep
configure:4405: result: U:/MOZTOOLS/grep.exe -F
configure:4440: checking for ld used by gcc
configure:4507: result: ld.exe
configure:4516: checking if the linker (ld.exe) is GNU ld
configure:4531: result: no
configure:4543: checking for BSD- or MS-compatible name lister (nm)
configure:4592: result: U:/usr/bin/nm -B
configure:4714: checking the name lister (U:/usr/bin/nm -B) interface
configure:4721: gcc -c -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  conftest.c >&5
configure:4724: U:/usr/bin/nm -B "conftest.o"
configure:4727: output
00000000 B _some_variable
configure:4734: result: BSD nm
configure:4737: checking whether ln -s works
configure:4741: result: yes
configure:4749: checking the maximum length of command line arguments
configure:4869: result: 512
configure:4886: checking whether the shell understands some XSI constructs
configure:4896: result: yes
configure:4900: checking whether the shell understands "+="
configure:4906: result: no
configure:4941: checking for ld.exe option to reload object files
configure:4948: result: -r
configure:4975: checking how to recognize dependent libraries
configure:5165: result: unknown
configure:5225: checking for ar
configure:5252: result: ar.exe
configure:5334: checking for strip
configure:5350: found U:/usr/bin/strip.exe
configure:5361: result: strip
configure:5437: checking for ranlib
configure:5464: result: echo
configure:5558: checking command to parse U:/usr/bin/nm -B output from gcc object
configure:5676: gcc -c -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  conftest.c >&5
configure:5679: $? = 0
configure:5683: U:/usr/bin/nm -B conftest.o \| sed -n -e 's/^.*[	 ]\([ABCDGIRSTW][ABCDGIRSTW]*\)[	 ][	 ]*\([_A-Za-z][_A-Za-z0-9]*\)$/\1 \2 \2/p' \> conftest.nm
configure:5686: $? = 0
cannot find nm_test_var in conftest.nm
configure:5676: gcc -c -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  conftest.c >&5
configure:5679: $? = 0
configure:5683: U:/usr/bin/nm -B conftest.o \| sed -n -e 's/^.*[	 ]\([ABCDGIRSTW][ABCDGIRSTW]*\)[	 ][	 ]*_\([_A-Za-z][_A-Za-z0-9]*\)$/\1 _\2 \2/p' \> conftest.nm
configure:5686: $? = 0
configure:5740: gcc -o conftest.exe -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  -Zexe -Zomf -Zmap -Zargs-wild -Zbin-files -D__ST_MT_ERRNO__ -s conftest.c conftstm.o >&5
configure:5743: $? = 0
configure:5781: result: ok
configure:6664: checking for ANSI C header files
configure:6694: gcc -c -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  conftest.c >&5
configure:6701: $? = 0
configure:6800: gcc -o conftest.exe -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  -Zexe -Zomf -Zmap -Zargs-wild -Zbin-files -D__ST_MT_ERRNO__ -s conftest.c  >&5
configure:6804: $? = 0
configure:6810: ./conftest.exe
configure:6814: $? = 0
configure:6832: result: yes
configure:6856: checking for sys/types.h
configure:6877: gcc -c -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  conftest.c >&5
configure:6884: $? = 0
configure:6901: result: yes
configure:6856: checking for sys/stat.h
configure:6877: gcc -c -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  conftest.c >&5
configure:6884: $? = 0
configure:6901: result: yes
configure:6856: checking for stdlib.h
configure:6877: gcc -c -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  conftest.c >&5
configure:6884: $? = 0
configure:6901: result: yes
configure:6856: checking for string.h
configure:6877: gcc -c -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  conftest.c >&5
configure:6884: $? = 0
configure:6901: result: yes
configure:6856: checking for memory.h
configure:6877: gcc -c -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  conftest.c >&5
configure:6884: $? = 0
configure:6901: result: yes
configure:6856: checking for strings.h
configure:6877: gcc -c -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  conftest.c >&5
configure:6884: $? = 0
configure:6901: result: yes
configure:6856: checking for inttypes.h
configure:6877: gcc -c -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  conftest.c >&5
configure:6884: $? = 0
configure:6901: result: yes
configure:6856: checking for stdint.h
configure:6877: gcc -c -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  conftest.c >&5
configure:6884: $? = 0
configure:6901: result: yes
configure:6856: checking for unistd.h
configure:6877: gcc -c -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  conftest.c >&5
configure:6884: $? = 0
configure:6901: result: yes
configure:6918: checking for dlfcn.h
configure:6939: gcc -c -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  conftest.c >&5
configure:6946: $? = 0
configure:6963: result: yes
configure:7147: checking for objdir
configure:7162: result: .libs
configure:7458: checking if gcc supports -fno-rtti -fno-exceptions
configure:7476: gcc -c -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  -fno-rtti -fno-exceptions conftest.c >&5
cc1.exe: warning: "-fno-rtti" is valid for C++ but not for C/ObjC
configure:7480: $? = 0
configure:7493: result: no
configure:7513: checking for gcc option to produce PIC
configure:7770: result: -DDLL_EXPORT -DPIC
configure:7782: checking if gcc PIC flag -DDLL_EXPORT -DPIC works
configure:7800: gcc -c -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  -DDLL_EXPORT -DPIC -DPIC conftest.c >&5
configure:7804: $? = 0
configure:7817: result: yes
configure:7841: checking if gcc static flag -static works

U:\usr\lib\libc_s.lib(signals.obj) : error LNK2029: "___libc_back_signalOS2V1Handler16bit" : unresolved external


There was 1 error detected
configure:7869: result: no
configure:7884: checking if gcc supports -c -o file.o
configure:7905: gcc -c -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  -o out/conftest2.o conftest.c >&5
configure:7909: $? = 0
configure:7931: result: yes
configure:7939: checking if gcc supports -c -o file.o
configure:7986: result: yes
configure:8019: checking whether the gcc linker (ld.exe) supports shared libraries
configure:9085: result: yes
configure:9324: checking dynamic linker characteristics
configure:10007: result: OS/2 ld.exe
configure:10109: checking how to hardcode library paths into programs
configure:10134: result: immediate
configure:10975: checking whether stripping libraries is possible
configure:10980: result: yes
configure:11015: checking if libtool supports shared libraries
configure:11017: result: yes
configure:11020: checking whether to build shared libraries
configure:11041: result: no
configure:11044: checking whether to build static libraries
configure:11048: result: yes
configure:11105: checking sys/signal.h usability
configure:11122: gcc -c -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  conftest.c >&5
configure:11129: $? = 0
configure:11143: result: yes
configure:11147: checking sys/signal.h presence
configure:11162: gcc -E  conftest.c
configure:11169: $? = 0
configure:11183: result: yes
configure:11211: checking for sys/signal.h
configure:11220: result: yes
configure:11262: checking for unistd.h
configure:11269: result: yes
configure:11404: checking for getpagesize
configure:11437: gcc -o conftest.exe -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  -Zexe -Zomf -Zmap -Zargs-wild -Zbin-files -D__ST_MT_ERRNO__ -s conftest.c  >&5
configure:11444: $? = 0
configure:11464: result: yes
configure:11475: checking for sysconf(_SC_PAGESIZE)
configure:11508: gcc -o conftest.exe -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  -Zexe -Zomf -Zmap -Zargs-wild -Zbin-files -D__ST_MT_ERRNO__ -s conftest.c  >&5
configure:11515: $? = 0
configure:11535: result: yes
configure:11546: checking for PAGESIZE in limits.h
configure:11574: gcc -o conftest.exe -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  -Zexe -Zomf -Zmap -Zargs-wild -Zbin-files -D__ST_MT_ERRNO__ -s conftest.c  >&5
conftest.c: In function `main':
conftest.c:32: error: `PAGESIZE' undeclared (first use in this function)
conftest.c:32: error: (Each undeclared identifier is reported only once
conftest.c:32: error: for each function it appears in.)
configure:11581: $? = 1
configure: failed program was:
| 
|       /* confdefs.h.  */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.6"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| /* end confdefs.h.  */
| #include <limits.h>
| int
| main ()
| {
| int pgsz = PAGESIZE;
|   ;
|   return 0;
| }
configure:11601: result: no
configure:11621: checking for mmap with MAP_ANON
configure:11710: gcc -o conftest.exe -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  -Zexe -Zomf -Zmap -Zargs-wild -Zbin-files -D__ST_MT_ERRNO__ -s conftest.c  >&5
conftest.c: In function `main':
conftest.c:33: error: `MAP_ANON' undeclared (first use in this function)
conftest.c:33: error: (Each undeclared identifier is reported only once
conftest.c:33: error: for each function it appears in.)
conftest.c:33: error: `MAP_PRIVATE' undeclared (first use in this function)
conftest.c:33: warning: initialization makes pointer from integer without a cast
configure:11714: $? = 1
configure: program exited with status 1
configure: failed program was:
| 
|       /* confdefs.h.  */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.6"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| /* end confdefs.h.  */
| 
| #include <sys/types.h>
| #include <sys/mman.h>
| int main ()
| {
|   void *p = mmap (0, 0x10000, PROT_READ | PROT_WRITE, MAP_ANON | MAP_PRIVATE, -1, 0);
|   return (p == (void *)(-1));
| }
configure:11742: result: no
configure:11753: checking for mmap with MAP_ANONYMOUS
configure:11844: gcc -o conftest.exe -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  -Zexe -Zomf -Zmap -Zargs-wild -Zbin-files -D__ST_MT_ERRNO__ -s conftest.c  >&5
conftest.c: In function `main':
conftest.c:33: error: `MAP_ANONYMOUS' undeclared (first use in this function)
conftest.c:33: error: (Each undeclared identifier is reported only once
conftest.c:33: error: for each function it appears in.)
conftest.c:33: error: `MAP_PRIVATE' undeclared (first use in this function)
conftest.c:33: warning: initialization makes pointer from integer without a cast
configure:11848: $? = 1
configure: program exited with status 1
configure: failed program was:
| 
|       /* confdefs.h.  */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.6"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| /* end confdefs.h.  */
| 
| #include <sys/types.h>
| #include <sys/mman.h>
| int main ()
| {
|   void *p = mmap (0, 0x10000, PROT_READ | PROT_WRITE, MAP_ANONYMOUS | MAP_PRIVATE, -1, 0);
|   return (p == (void *)(-1));
| }
configure:11876: result: no
configure:11887: checking for mmap of /dev/zero
configure:11989: gcc -o conftest.exe -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  -Zexe -Zomf -Zmap -Zargs-wild -Zbin-files -D__ST_MT_ERRNO__ -s conftest.c  >&5
conftest.c: In function `main':
conftest.c:41: error: `MAP_PRIVATE' undeclared (first use in this function)
conftest.c:41: error: (Each undeclared identifier is reported only once
conftest.c:41: error: for each function it appears in.)
conftest.c:41: warning: assignment makes pointer from integer without a cast
configure:11993: $? = 1
configure: program exited with status 1
configure: failed program was:
| 
|       /* confdefs.h.  */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.6"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| /* end confdefs.h.  */
| 
| #include <sys/types.h>
| #include <sys/mman.h>
| #include <fcntl.h>
| #ifndef MAP_FILE
| #define MAP_FILE 0
| #endif
| int main ()
| {
|   int fd;
|   void *p;
|   fd = open ("/dev/zero", O_RDONLY, 0666);
|   if (fd < 0) return 1;
|   p = mmap (0, 0x10000, PROT_READ | PROT_WRITE, MAP_FILE | MAP_PRIVATE, fd, 0);
|   return (p == (void *)(-1));
| }
configure:12021: result: no
configure:12045: checking whether a fault handler according to POSIX works
configure:12213: gcc -o conftest.exe -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  -Zexe -Zomf -Zmap -Zargs-wild -Zbin-files -D__ST_MT_ERRNO__ -s conftest.c  >&5
conftest.c: In function `main':
conftest.c:87: error: `map_flags' undeclared (first use in this function)
conftest.c:87: error: (Each undeclared identifier is reported only once
conftest.c:87: error: for each function it appears in.)
conftest.c:87: error: `zero_fd' undeclared (first use in this function)
conftest.c:87: warning: assignment makes pointer from integer without a cast
configure:12217: $? = 1
configure: program exited with status 1
configure: failed program was:
| 
|       /* confdefs.h.  */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.6"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| /* end confdefs.h.  */
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| 
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, siginfo_t *sip, void *ucp)
| {
|   void *fault_address = (void *) (sip->si_addr);
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| action.sa_sigaction = &sigsegv_handler;
|    action.sa_flags = SA_SIGINFO;
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:12245: result: no
configure:12253: checking whether a fault handler according to Linux/i386 works
configure:12422: gcc -o conftest.exe -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  -Zexe -Zomf -Zmap -Zargs-wild -Zbin-files -D__ST_MT_ERRNO__ -s conftest.c  >&5
conftest.c:34:28: asm/sigcontext.h: No such file or directory
conftest.c: In function `sigsegv_handler':
conftest.c:60: error: structure has no member named `cr2'
conftest.c: In function `main':
conftest.c:87: error: `map_flags' undeclared (first use in this function)
conftest.c:87: error: (Each undeclared identifier is reported only once
conftest.c:87: error: for each function it appears in.)
conftest.c:87: error: `zero_fd' undeclared (first use in this function)
conftest.c:87: warning: assignment makes pointer from integer without a cast
configure:12426: $? = 1
configure: program exited with status 1
configure: failed program was:
| 
|       /* confdefs.h.  */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.6"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| /* end confdefs.h.  */
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| #include <asm/sigcontext.h>
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, struct sigcontext sc)
| {
|   void *fault_address = (void *) (sc.cr2);
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| 
|   action.sa_handler = (void (*) (int)) &sigsegv_handler;
|   action.sa_flags = 0;
| 
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:12454: result: no
configure:12462: checking whether a fault handler according to old Linux/i386 works
configure:12631: gcc -o conftest.exe -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  -Zexe -Zomf -Zmap -Zargs-wild -Zbin-files -D__ST_MT_ERRNO__ -s conftest.c  >&5
conftest.c: In function `main':
conftest.c:87: error: `map_flags' undeclared (first use in this function)
conftest.c:87: error: (Each undeclared identifier is reported only once
conftest.c:87: error: for each function it appears in.)
conftest.c:87: error: `zero_fd' undeclared (first use in this function)
conftest.c:87: warning: assignment makes pointer from integer without a cast
configure:12635: $? = 1
configure: program exited with status 1
configure: failed program was:
| 
|       /* confdefs.h.  */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.6"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| /* end confdefs.h.  */
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| 
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, unsigned int more)
| {
|   void *fault_address = (void *) (((unsigned long *) &more) [21]);
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| 
|   action.sa_handler = (void (*) (int)) &sigsegv_handler;
|   action.sa_flags = 0;
| 
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:12663: result: no
configure:12671: checking whether a fault handler according to Linux/m68k works
configure:12842: gcc -o conftest.exe -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  -Zexe -Zomf -Zmap -Zargs-wild -Zbin-files -D__ST_MT_ERRNO__ -s conftest.c  >&5
conftest.c:34:28: asm/sigcontext.h: No such file or directory
In file included from conftest.c:35:
src/fault-linux-m68k.c: In function `get_fault_addr':
src/fault-linux-m68k.c:22: error: structure has no member named `sc_formatvec'
conftest.c: In function `main':
conftest.c:88: error: `map_flags' undeclared (first use in this function)
conftest.c:88: error: (Each undeclared identifier is reported only once
conftest.c:88: error: for each function it appears in.)
conftest.c:88: error: `zero_fd' undeclared (first use in this function)
conftest.c:88: warning: assignment makes pointer from integer without a cast
configure:12846: $? = 1
configure: program exited with status 1
configure: failed program was:
| 
|       /* confdefs.h.  */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.6"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| /* end confdefs.h.  */
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| #include <asm/sigcontext.h>
| #include "./src/fault-linux-m68k.c"
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, int code, struct sigcontext *scp)
| {
|   void *fault_address = (void *) (get_fault_addr (scp));
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| 
|   action.sa_handler = (void (*) (int)) &sigsegv_handler;
|   action.sa_flags = 0;
| 
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:12874: result: no
configure:12882: checking whether a fault handler according to Linux/PowerPC works
configure:13051: gcc -o conftest.exe -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  -Zexe -Zomf -Zmap -Zargs-wild -Zbin-files -D__ST_MT_ERRNO__ -s conftest.c  >&5
conftest.c:34:28: asm/sigcontext.h: No such file or directory
conftest.c: In function `sigsegv_handler':
conftest.c:60: error: structure has no member named `regs'
conftest.c: In function `main':
conftest.c:87: error: `map_flags' undeclared (first use in this function)
conftest.c:87: error: (Each undeclared identifier is reported only once
conftest.c:87: error: for each function it appears in.)
conftest.c:87: error: `zero_fd' undeclared (first use in this function)
conftest.c:87: warning: assignment makes pointer from integer without a cast
configure:13055: $? = 1
configure: program exited with status 1
configure: failed program was:
| 
|       /* confdefs.h.  */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.6"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| /* end confdefs.h.  */
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| #include <asm/sigcontext.h>
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, struct sigcontext *scp)
| {
|   void *fault_address = (void *) (scp->regs->dar);
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| 
|   action.sa_handler = (void (*) (int)) &sigsegv_handler;
|   action.sa_flags = 0;
| 
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:13083: result: no
configure:13091: checking whether a fault handler according to Linux/HPPA works
configure:13259: gcc -o conftest.exe -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  -Zexe -Zomf -Zmap -Zargs-wild -Zbin-files -D__ST_MT_ERRNO__ -s conftest.c  >&5
conftest.c: In function `sigsegv_handler':
conftest.c:60: error: structure has no member named `si_ptr'
conftest.c: In function `main':
conftest.c:87: error: `map_flags' undeclared (first use in this function)
conftest.c:87: error: (Each undeclared identifier is reported only once
conftest.c:87: error: for each function it appears in.)
conftest.c:87: error: `zero_fd' undeclared (first use in this function)
conftest.c:87: warning: assignment makes pointer from integer without a cast
configure:13263: $? = 1
configure: program exited with status 1
configure: failed program was:
| 
|       /* confdefs.h.  */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.6"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| /* end confdefs.h.  */
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| 
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, siginfo_t *sip, void *ucp)
| {
|   void *fault_address = (void *) (sip->si_ptr);
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| action.sa_sigaction = &sigsegv_handler;
|    action.sa_flags = SA_SIGINFO;
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:13291: result: no
configure:13299: checking whether a fault handler according to BSD works
configure:13468: gcc -o conftest.exe -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  -Zexe -Zomf -Zmap -Zargs-wild -Zbin-files -D__ST_MT_ERRNO__ -s conftest.c  >&5
conftest.c: In function `main':
conftest.c:87: error: `map_flags' undeclared (first use in this function)
conftest.c:87: error: (Each undeclared identifier is reported only once
conftest.c:87: error: for each function it appears in.)
conftest.c:87: error: `zero_fd' undeclared (first use in this function)
conftest.c:87: warning: assignment makes pointer from integer without a cast
configure:13472: $? = 1
configure: program exited with status 1
configure: failed program was:
| 
|       /* confdefs.h.  */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.6"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| /* end confdefs.h.  */
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| 
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, int code, struct sigcontext *scp, void *addr)
| {
|   void *fault_address = (void *) (addr);
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| 
|   action.sa_handler = (void (*) (int)) &sigsegv_handler;
|   action.sa_flags = 0;
| 
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:13500: result: no
configure:13508: checking whether a fault handler according to IRIX works
configure:13677: gcc -o conftest.exe -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  -Zexe -Zomf -Zmap -Zargs-wild -Zbin-files -D__ST_MT_ERRNO__ -s conftest.c  >&5
conftest.c: In function `sigsegv_handler':
conftest.c:60: error: structure has no member named `sc_badvaddr'
conftest.c: In function `main':
conftest.c:87: error: `map_flags' undeclared (first use in this function)
conftest.c:87: error: (Each undeclared identifier is reported only once
conftest.c:87: error: for each function it appears in.)
conftest.c:87: error: `zero_fd' undeclared (first use in this function)
conftest.c:87: warning: assignment makes pointer from integer without a cast
configure:13681: $? = 1
configure: program exited with status 1
configure: failed program was:
| 
|       /* confdefs.h.  */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.6"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| /* end confdefs.h.  */
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| 
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, int code, struct sigcontext *scp)
| {
|   void *fault_address = (void *) ((unsigned long) scp->sc_badvaddr);
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| 
|   action.sa_handler = (void (*) (int)) &sigsegv_handler;
|   action.sa_flags = 0;
| 
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:13709: result: no
configure:13717: checking whether a fault handler according to HP-UX HPPA works
configure:13896: gcc -o conftest.exe -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  -Zexe -Zomf -Zmap -Zargs-wild -Zbin-files -D__ST_MT_ERRNO__ -s conftest.c  >&5
conftest.c: In function `sigsegv_handler':
conftest.c:63: error: structure has no member named `sc_sl'
conftest.c:63: error: `SS_WIDEREGS' undeclared (first use in this function)
conftest.c:63: error: (Each undeclared identifier is reported only once
conftest.c:63: error: for each function it appears in.)
conftest.c:63: error: structure has no member named `sc_sl'
conftest.c:63: error: `SS_NARROWISINVALID' undeclared (first use in this function)
conftest.c:63: error: structure has no member named `sc_sl'
conftest.c:63: error: structure has no member named `sc_sl'
conftest.c: In function `main':
conftest.c:90: error: `map_flags' undeclared (first use in this function)
conftest.c:90: error: `zero_fd' undeclared (first use in this function)
conftest.c:90: warning: assignment makes pointer from integer without a cast
configure:13900: $? = 1
configure: program exited with status 1
configure: failed program was:
| 
|       /* confdefs.h.  */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.6"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| /* end confdefs.h.  */
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| 
| #define USE_64BIT_REGS(mc)   (((mc).ss_flags & SS_WIDEREGS) && ((mc).ss_flags & SS_NARROWISINVALID))
| #define GET_CR21(mc)   (USE_64BIT_REGS(mc) ? (mc).ss_wide.ss_64.ss_cr21 : (mc).ss_narrow.ss_cr21)
| 
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, int code, struct sigcontext *scp)
| {
|   void *fault_address = (void *) (GET_CR21 (scp->sc_sl.sl_ss));
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| 
|   action.sa_handler = (void (*) (int)) &sigsegv_handler;
|   action.sa_flags = 0;
| 
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:13928: result: no
configure:13936: checking whether a fault handler according to OSF/1 Alpha works
configure:14105: gcc -o conftest.exe -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  -Zexe -Zomf -Zmap -Zargs-wild -Zbin-files -D__ST_MT_ERRNO__ -s conftest.c  >&5
conftest.c: In function `sigsegv_handler':
conftest.c:60: error: structure has no member named `sc_traparg_a0'
conftest.c: In function `main':
conftest.c:87: error: `map_flags' undeclared (first use in this function)
conftest.c:87: error: (Each undeclared identifier is reported only once
conftest.c:87: error: for each function it appears in.)
conftest.c:87: error: `zero_fd' undeclared (first use in this function)
conftest.c:87: warning: assignment makes pointer from integer without a cast
configure:14109: $? = 1
configure: program exited with status 1
configure: failed program was:
| 
|       /* confdefs.h.  */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.6"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| /* end confdefs.h.  */
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| 
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, int code, struct sigcontext *scp)
| {
|   void *fault_address = (void *) (scp->sc_traparg_a0);
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| 
|   action.sa_handler = (void (*) (int)) &sigsegv_handler;
|   action.sa_flags = 0;
| 
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:14137: result: no
configure:14145: checking whether a fault handler according to NetBSD Alpha works
configure:14314: gcc -o conftest.exe -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  -Zexe -Zomf -Zmap -Zargs-wild -Zbin-files -D__ST_MT_ERRNO__ -s conftest.c  >&5
In file included from conftest.c:34:
src/fault-netbsd-alpha.c: In function `get_fault_addr':
src/fault-netbsd-alpha.c:36: error: structure has no member named `sc_regs'
conftest.c: In function `main':
conftest.c:87: error: `map_flags' undeclared (first use in this function)
conftest.c:87: error: (Each undeclared identifier is reported only once
conftest.c:87: error: for each function it appears in.)
conftest.c:87: error: `zero_fd' undeclared (first use in this function)
conftest.c:87: warning: assignment makes pointer from integer without a cast
configure:14318: $? = 1
configure: program exited with status 1
configure: failed program was:
| 
|       /* confdefs.h.  */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.6"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| /* end confdefs.h.  */
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| #include "./src/fault-netbsd-alpha.c"
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, int code, struct sigcontext *scp)
| {
|   void *fault_address = (void *) (get_fault_addr (scp));
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| 
|   action.sa_handler = (void (*) (int)) &sigsegv_handler;
|   action.sa_flags = 0;
| 
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:14346: result: no
configure:14354: checking whether a fault handler according to AIX works
configure:14523: gcc -o conftest.exe -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  -Zexe -Zomf -Zmap -Zargs-wild -Zbin-files -D__ST_MT_ERRNO__ -s conftest.c  >&5
conftest.c: In function `sigsegv_handler':
conftest.c:60: error: structure has no member named `sc_jmpbuf'
conftest.c: In function `main':
conftest.c:87: error: `map_flags' undeclared (first use in this function)
conftest.c:87: error: (Each undeclared identifier is reported only once
conftest.c:87: error: for each function it appears in.)
conftest.c:87: error: `zero_fd' undeclared (first use in this function)
conftest.c:87: warning: assignment makes pointer from integer without a cast
configure:14527: $? = 1
configure: program exited with status 1
configure: failed program was:
| 
|       /* confdefs.h.  */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.6"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| /* end confdefs.h.  */
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| 
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, int code, struct sigcontext *scp)
| {
|   void *fault_address = (void *) (scp->sc_jmpbuf.jmp_context.o_vaddr);
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| 
|   action.sa_handler = (void (*) (int)) &sigsegv_handler;
|   action.sa_flags = 0;
| 
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:14555: result: no
configure:14563: checking whether a fault handler according to MacOSX/Darwin7 PowerPC works
configure:14731: gcc -o conftest.exe -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  -Zexe -Zomf -Zmap -Zargs-wild -Zbin-files -D__ST_MT_ERRNO__ -s conftest.c  >&5
In file included from conftest.c:34:
src/fault-macosdarwin7-powerpc.c:19:22: ucontext.h: No such file or directory
In file included from conftest.c:34:
src/fault-macosdarwin7-powerpc.c:36: error: parse error before "ucontext_t"
src/fault-macosdarwin7-powerpc.c: In function `get_fault_addr':
src/fault-macosdarwin7-powerpc.c:38: error: `sip' undeclared (first use in this function)
src/fault-macosdarwin7-powerpc.c:38: error: (Each undeclared identifier is reported only once
src/fault-macosdarwin7-powerpc.c:38: error: for each function it appears in.)
src/fault-macosdarwin7-powerpc.c:43: error: `ucp' undeclared (first use in this function)
conftest.c: At top level:
conftest.c:58: error: parse error before "ucontext_t"
conftest.c: In function `sigsegv_handler':
conftest.c:60: error: `sip' undeclared (first use in this function)
conftest.c:60: error: `ucp' undeclared (first use in this function)
conftest.c: In function `main':
conftest.c:87: error: `map_flags' undeclared (first use in this function)
conftest.c:87: error: `zero_fd' undeclared (first use in this function)
conftest.c:87: warning: assignment makes pointer from integer without a cast
configure:14735: $? = 1
configure: program exited with status 1
configure: failed program was:
| 
|       /* confdefs.h.  */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.6"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| /* end confdefs.h.  */
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| #include "./src/fault-macosdarwin7-powerpc.c"
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, siginfo_t *sip, ucontext_t *ucp)
| {
|   void *fault_address = (void *) (get_fault_addr (sip, ucp));
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| action.sa_sigaction = &sigsegv_handler;
|    action.sa_flags = SA_SIGINFO;
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:14763: result: no
configure:14772: checking whether a fault handler according to MacOSX/Darwin5 PowerPC works
configure:14941: gcc -o conftest.exe -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  -Zexe -Zomf -Zmap -Zargs-wild -Zbin-files -D__ST_MT_ERRNO__ -s conftest.c  >&5
In file included from conftest.c:34:
src/fault-macosdarwin5-powerpc.c: In function `get_fault_addr':
src/fault-macosdarwin5-powerpc.c:36: error: structure has no member named `sc_ir'
src/fault-macosdarwin5-powerpc.c:37: error: structure has no member named `sc_regs'
conftest.c: In function `main':
conftest.c:87: error: `map_flags' undeclared (first use in this function)
conftest.c:87: error: (Each undeclared identifier is reported only once
conftest.c:87: error: for each function it appears in.)
conftest.c:87: error: `zero_fd' undeclared (first use in this function)
conftest.c:87: warning: assignment makes pointer from integer without a cast
configure:14945: $? = 1
configure: program exited with status 1
configure: failed program was:
| 
|       /* confdefs.h.  */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.6"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| /* end confdefs.h.  */
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| #include "./src/fault-macosdarwin5-powerpc.c"
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, int code, struct sigcontext *scp)
| {
|   void *fault_address = (void *) (get_fault_addr (scp));
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| 
|   action.sa_handler = (void (*) (int)) &sigsegv_handler;
|   action.sa_flags = 0;
| 
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:14973: result: no
configure:14982: checking whether a fault handler according to Hurd works
configure:15151: gcc -o conftest.exe -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  -Zexe -Zomf -Zmap -Zargs-wild -Zbin-files -D__ST_MT_ERRNO__ -s conftest.c  >&5
conftest.c: In function `main':
conftest.c:87: error: `map_flags' undeclared (first use in this function)
conftest.c:87: error: (Each undeclared identifier is reported only once
conftest.c:87: error: for each function it appears in.)
conftest.c:87: error: `zero_fd' undeclared (first use in this function)
conftest.c:87: warning: assignment makes pointer from integer without a cast
configure:15155: $? = 1
configure: program exited with status 1
configure: failed program was:
| 
|       /* confdefs.h.  */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.6"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| /* end confdefs.h.  */
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| 
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, int code, struct sigcontext *scp)
| {
|   void *fault_address = (void *) (code);
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| 
|   action.sa_handler = (void (*) (int)) &sigsegv_handler;
|   action.sa_flags = 0;
| 
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:15183: result: no
configure:15450: checking for the fault handler specifics
configure:15461: result: none
configure:15482: checking if the system supports catching SIGSEGV
configure:15484: result: no
configure:15494: checking for stack direction
configure:15591: result: grows down
configure:15599: checking for PIOCMAP in sys/procfs.h
configure:15626: gcc -o conftest.exe -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  -Zexe -Zomf -Zmap -Zargs-wild -Zbin-files -D__ST_MT_ERRNO__ -s conftest.c  >&5
conftest.c:30:24: sys/procfs.h: No such file or directory
conftest.c: In function `main':
conftest.c:34: error: `PIOCNMAP' undeclared (first use in this function)
conftest.c:34: error: (Each undeclared identifier is reported only once
conftest.c:34: error: for each function it appears in.)
conftest.c:34: error: `PIOCMAP' undeclared (first use in this function)
conftest.c:34: error: `prmap_t' undeclared (first use in this function)
conftest.c:34: error: parse error before "y"
configure:15633: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.6"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define CFG_FAULT "fault-none.h"
| #define CFG_MACHFAULT "fault-none.h"
| #define STACK_DIRECTION -1
| /* end confdefs.h.  */
| #include <sys/procfs.h>
| int
| main ()
| {
| int x = PIOCNMAP + PIOCMAP; prmap_t y;
|   ;
|   return 0;
| }
configure:15654: result: no
configure:15660: checking for mincore
configure:15716: gcc -o conftest.exe -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  -Zexe -Zomf -Zmap -Zargs-wild -Zbin-files -D__ST_MT_ERRNO__ -s conftest.c  >&5

U:\tmp\ccLtwXBC.o(ccLtwXBC.o) : error LNK2029: "_mincore" : unresolved external


There was 1 error detected
weakld: error: Unresolved symbol (UNDEF) '_mincore'.
weakld: info: The symbol is referenced by:
    U:\tmp\ccLtwXBC.o
Ignoring unresolved externals reported from weak prelinker.
configure:15723: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.6"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define CFG_FAULT "fault-none.h"
| #define CFG_MACHFAULT "fault-none.h"
| #define STACK_DIRECTION -1
| /* end confdefs.h.  */
| /* Define mincore to an innocuous variant, in case <limits.h> declares mincore.
|    For example, HP-UX 11i <limits.h> declares gettimeofday.  */
| #define mincore innocuous_mincore
| 
| /* System header to define __stub macros and hopefully few prototypes,
|     which can conflict with char mincore (); below.
|     Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
|     <limits.h> exists even on freestanding compilers.  */
| 
| #ifdef __STDC__
| # include <limits.h>
| #else
| # include <assert.h>
| #endif
| 
| #undef mincore
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char mincore ();
| /* The GNU C library defines this for functions which it implements
|     to always fail with ENOSYS.  Some functions are actually named
|     something starting with __ and the normal name is an alias.  */
| #if defined __stub_mincore || defined __stub___mincore
| choke me
| #endif
| 
| int
| main ()
| {
| return mincore ();
|   ;
|   return 0;
| }
configure:15745: result: no
configure:15791: checking for getrlimit
configure:15847: gcc -o conftest.exe -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  -Zexe -Zomf -Zmap -Zargs-wild -Zbin-files -D__ST_MT_ERRNO__ -s conftest.c  >&5
configure:15854: $? = 0
configure:15876: result: yes
configure:15791: checking for setrlimit
configure:15847: gcc -o conftest.exe -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  -Zexe -Zomf -Zmap -Zargs-wild -Zbin-files -D__ST_MT_ERRNO__ -s conftest.c  >&5
configure:15854: $? = 0
configure:15876: result: yes
configure:15896: checking for sigaltstack
configure:15952: gcc -o conftest.exe -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  -Zexe -Zomf -Zmap -Zargs-wild -Zbin-files -D__ST_MT_ERRNO__ -s conftest.c  >&5
configure:15959: $? = 0
configure:15981: result: yes
configure:15994: checking for stack_t
configure:16028: gcc -c -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  conftest.c >&5
configure:16035: $? = 0
configure:16068: gcc -c -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  conftest.c >&5
conftest.c: In function `main':
conftest.c:44: error: parse error before ')' token
configure:16075: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.6"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define CFG_FAULT "fault-none.h"
| #define CFG_MACHFAULT "fault-none.h"
| #define STACK_DIRECTION -1
| #define CFG_STACKVMA "stackvma-none.c"
| #define HAVE_GETRLIMIT 1
| #define HAVE_SETRLIMIT 1
| #define HAVE_SIGALTSTACK 1
| /* end confdefs.h.  */
| 
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| 
| 
| int
| main ()
| {
| if (sizeof ((stack_t)))
| 	  return 0;
|   ;
|   return 0;
| }
configure:16098: result: yes
configure:16113: checking for working sigaltstack
configure:16304: gcc -o conftest.exe -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  -Zexe -Zomf -Zmap -Zargs-wild -Zbin-files -D__ST_MT_ERRNO__ -s conftest.c  >&5
configure:16308: $? = 0
configure:16314: ./conftest.exe
[1]   Killed                  ./conftest${ac_e...
configure:16318: $? = 137
configure: program exited with status 137
configure: failed program was:
| 
|             /* confdefs.h.  */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.6"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define CFG_FAULT "fault-none.h"
| #define CFG_MACHFAULT "fault-none.h"
| #define STACK_DIRECTION -1
| #define CFG_STACKVMA "stackvma-none.c"
| #define HAVE_GETRLIMIT 1
| #define HAVE_SETRLIMIT 1
| #define HAVE_SIGALTSTACK 1
| /* end confdefs.h.  */
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| #if HAVE_SETRLIMIT
| # include <sys/types.h>
| # include <sys/time.h>
| # include <sys/resource.h>
| #endif
| #ifndef SIGSTKSZ
| # define SIGSTKSZ 16384
| #endif
| void stackoverflow_handler (int sig)
| {
|   /* If we get here, the stack overflow was caught.  */
|   exit (0);
| }
| volatile int * recurse_1 (volatile int n, volatile int *p)
| {
|   if (n >= 0)
|     *recurse_1 (n + 1, p) += n;
|   return p;
| }
| int recurse (volatile int n)
| {
|   int sum = 0;
|   return *recurse_1 (n, &sum);
| }
| int main ()
| {
|   char mystack[SIGSTKSZ];
|   stack_t altstack;
|   struct sigaction action;
| #if defined HAVE_SETRLIMIT && defined RLIMIT_STACK
|   /* Before starting the endless recursion, try to be friendly to the user's
|      machine.  On some Linux 2.2.x systems, there is no stack limit for user
|      processes at all.  We don't want to kill such systems.  */
|   struct rlimit rl;
|   rl.rlim_cur = rl.rlim_max = 0x100000; /* 1 MB */
|   setrlimit (RLIMIT_STACK, &rl);
| #endif
|   /* Install the alternate stack.  */
|   altstack.ss_sp = mystack;
|   altstack.ss_size = sizeof (mystack);
|   altstack.ss_flags = 0; /* no SS_DISABLE */
|   if (sigaltstack (&altstack, NULL) < 0)
|     exit (1);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset (&action.sa_mask);
|   action.sa_handler = &stackoverflow_handler;
|   action.sa_flags = SA_ONSTACK;
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* Provoke a stack overflow.  */
|   recurse (0);
|   exit (2);
| }
configure:16341: result: no
configure:16352: checking if the system supports catching stack overflow
configure:16439: result: no
configure:16462: checking whether a signal handler can be left through longjmp
configure:16560: gcc -o conftest.exe -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  -Zexe -Zomf -Zmap -Zargs-wild -Zbin-files -D__ST_MT_ERRNO__ -s conftest.c  >&5
configure:16564: $? = 0
configure:16570: ./conftest.exe
[1]   Killed                  ./conftest${ac_e...
configure:16574: $? = 137
configure: program exited with status 137
configure: failed program was:
| 
|       /* confdefs.h.  */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.6"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define CFG_FAULT "fault-none.h"
| #define CFG_MACHFAULT "fault-none.h"
| #define STACK_DIRECTION -1
| #define CFG_STACKVMA "stackvma-none.c"
| #define HAVE_GETRLIMIT 1
| #define HAVE_SETRLIMIT 1
| #define HAVE_SIGALTSTACK 1
| /* end confdefs.h.  */
| 
| #include <stdlib.h>
| #include <signal.h>
| #include <setjmp.h>
| 
| #if HAVE_SETRLIMIT
| # include <sys/types.h>
| # include <sys/time.h>
| # include <sys/resource.h>
| #endif
| #ifndef SIGSTKSZ
| # define SIGSTKSZ 16384
| #endif
| jmp_buf mainloop;
| sigset_t mainsigset;
| int pass = 0;
| void stackoverflow_handler (int sig)
| {
|   pass++;
|   sigprocmask (SIG_SETMASK, &mainsigset, NULL);
|   {  }
|   longjmp (mainloop, pass);
| }
| volatile int * recurse_1 (volatile int n, volatile int *p)
| {
|   if (n >= 0)
|     *recurse_1 (n + 1, p) += n;
|   return p;
| }
| int recurse (volatile int n)
| {
|   int sum = 0;
|   return *recurse_1 (n, &sum);
| }
| int main ()
| {
|   char mystack[SIGSTKSZ];
|   stack_t altstack;
|   struct sigaction action;
|   sigset_t emptyset;
| #if defined HAVE_SETRLIMIT && defined RLIMIT_STACK
|   /* Before starting the endless recursion, try to be friendly to the user's
|      machine.  On some Linux 2.2.x systems, there is no stack limit for user
|      processes at all.  We don't want to kill such systems.  */
|   struct rlimit rl;
|   rl.rlim_cur = rl.rlim_max = 0x100000; /* 1 MB */
|   setrlimit (RLIMIT_STACK, &rl);
| #endif
|   /* Install the alternate stack.  */
|   altstack.ss_sp = mystack;
|   altstack.ss_size = sizeof (mystack);
|   altstack.ss_flags = 0; /* no SS_DISABLE */
|   if (sigaltstack (&altstack, NULL) < 0)
|     exit (1);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset (&action.sa_mask);
|   action.sa_handler = &stackoverflow_handler;
|   action.sa_flags = SA_ONSTACK;
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* Save the current signal mask.  */
|   sigemptyset (&emptyset);
|   sigprocmask (SIG_BLOCK, &emptyset, &mainsigset);
|   /* Provoke two stack overflows in a row.  */
|   if (setjmp (mainloop) < 2)
|     {
|       recurse (0);
|       exit (2);
|     }
|   exit (0);
| }
configure:16592: result: no
configure:16600: checking whether a signal handler can be left through longjmp and sigaltstack
configure:16708: gcc -o conftest.exe -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  -Zexe -Zomf -Zmap -Zargs-wild -Zbin-files -D__ST_MT_ERRNO__ -s conftest.c  >&5
configure:16712: $? = 0
configure:16718: ./conftest.exe
[1]   Killed                  ./conftest${ac_e...
configure:16722: $? = 137
configure: program exited with status 137
configure: failed program was:
| 
|       /* confdefs.h.  */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.6"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define CFG_FAULT "fault-none.h"
| #define CFG_MACHFAULT "fault-none.h"
| #define STACK_DIRECTION -1
| #define CFG_STACKVMA "stackvma-none.c"
| #define HAVE_GETRLIMIT 1
| #define HAVE_SETRLIMIT 1
| #define HAVE_SIGALTSTACK 1
| /* end confdefs.h.  */
| 
| #include <stdlib.h>
| #include <signal.h>
| #include <setjmp.h>
| 
| #ifndef SS_ONSTACK
| #define SS_ONSTACK SA_ONSTACK
| #endif
| 
| #if HAVE_SETRLIMIT
| # include <sys/types.h>
| # include <sys/time.h>
| # include <sys/resource.h>
| #endif
| #ifndef SIGSTKSZ
| # define SIGSTKSZ 16384
| #endif
| jmp_buf mainloop;
| sigset_t mainsigset;
| int pass = 0;
| void stackoverflow_handler (int sig)
| {
|   pass++;
|   sigprocmask (SIG_SETMASK, &mainsigset, NULL);
|   { stack_t ss;
|    if (sigaltstack (NULL, &ss) >= 0)
|      {
|        ss.ss_flags &= ~SS_ONSTACK;
|        sigaltstack (&ss, NULL);
|      }
|    }
|   longjmp (mainloop, pass);
| }
| volatile int * recurse_1 (volatile int n, volatile int *p)
| {
|   if (n >= 0)
|     *recurse_1 (n + 1, p) += n;
|   return p;
| }
| int recurse (volatile int n)
| {
|   int sum = 0;
|   return *recurse_1 (n, &sum);
| }
| int main ()
| {
|   char mystack[SIGSTKSZ];
|   stack_t altstack;
|   struct sigaction action;
|   sigset_t emptyset;
| #if defined HAVE_SETRLIMIT && defined RLIMIT_STACK
|   /* Before starting the endless recursion, try to be friendly to the user's
|      machine.  On some Linux 2.2.x systems, there is no stack limit for user
|      processes at all.  We don't want to kill such systems.  */
|   struct rlimit rl;
|   rl.rlim_cur = rl.rlim_max = 0x100000; /* 1 MB */
|   setrlimit (RLIMIT_STACK, &rl);
| #endif
|   /* Install the alternate stack.  */
|   altstack.ss_sp = mystack;
|   altstack.ss_size = sizeof (mystack);
|   altstack.ss_flags = 0; /* no SS_DISABLE */
|   if (sigaltstack (&altstack, NULL) < 0)
|     exit (1);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset (&action.sa_mask);
|   action.sa_handler = &stackoverflow_handler;
|   action.sa_flags = SA_ONSTACK;
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* Save the current signal mask.  */
|   sigemptyset (&emptyset);
|   sigprocmask (SIG_BLOCK, &emptyset, &mainsigset);
|   /* Provoke two stack overflows in a row.  */
|   if (setjmp (mainloop) < 2)
|     {
|       recurse (0);
|       exit (2);
|     }
|   exit (0);
| }
configure:16740: result: no
configure:16748: checking whether a signal handler can be left through longjmp and setcontext
configure:16861: gcc -o conftest.exe -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  -Zexe -Zomf -Zmap -Zargs-wild -Zbin-files -D__ST_MT_ERRNO__ -s conftest.c  >&5
conftest.c:39:22: ucontext.h: No such file or directory
conftest.c: In function `stackoverflow_handler':
conftest.c:60: error: syntax error before "uc"
conftest.c:62: error: `uc' undeclared (first use in this function)
conftest.c:62: error: (Each undeclared identifier is reported only once
conftest.c:62: error: for each function it appears in.)
configure:16865: $? = 1
configure: program exited with status 1
configure: failed program was:
| 
|       /* confdefs.h.  */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.6"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define CFG_FAULT "fault-none.h"
| #define CFG_MACHFAULT "fault-none.h"
| #define STACK_DIRECTION -1
| #define CFG_STACKVMA "stackvma-none.c"
| #define HAVE_GETRLIMIT 1
| #define HAVE_SETRLIMIT 1
| #define HAVE_SIGALTSTACK 1
| /* end confdefs.h.  */
| 
| #include <stdlib.h>
| #include <signal.h>
| #include <setjmp.h>
| #include <ucontext.h>
| #ifndef SS_ONSTACK
| #define SS_ONSTACK SA_ONSTACK
| #endif
| 
| #if HAVE_SETRLIMIT
| # include <sys/types.h>
| # include <sys/time.h>
| # include <sys/resource.h>
| #endif
| #ifndef SIGSTKSZ
| # define SIGSTKSZ 16384
| #endif
| jmp_buf mainloop;
| sigset_t mainsigset;
| int pass = 0;
| void stackoverflow_handler (int sig)
| {
|   pass++;
|   sigprocmask (SIG_SETMASK, &mainsigset, NULL);
|   { static int fl;
|    static ucontext_t uc;
|    fl = 0;
|    if (getcontext (&uc) >= 0)
|      if (fl == 0)
|        if (uc.uc_stack.ss_flags & SS_ONSTACK)
|          {
|            uc.uc_stack.ss_flags &= ~SS_ONSTACK;
|            fl = 1;
|            setcontext (&uc);
|          }
|    }
|   longjmp (mainloop, pass);
| }
| volatile int * recurse_1 (volatile int n, volatile int *p)
| {
|   if (n >= 0)
|     *recurse_1 (n + 1, p) += n;
|   return p;
| }
| int recurse (volatile int n)
| {
|   int sum = 0;
|   return *recurse_1 (n, &sum);
| }
| int main ()
| {
|   char mystack[SIGSTKSZ];
|   stack_t altstack;
|   struct sigaction action;
|   sigset_t emptyset;
| #if defined HAVE_SETRLIMIT && defined RLIMIT_STACK
|   /* Before starting the endless recursion, try to be friendly to the user's
|      machine.  On some Linux 2.2.x systems, there is no stack limit for user
|      processes at all.  We don't want to kill such systems.  */
|   struct rlimit rl;
|   rl.rlim_cur = rl.rlim_max = 0x100000; /* 1 MB */
|   setrlimit (RLIMIT_STACK, &rl);
| #endif
|   /* Install the alternate stack.  */
|   altstack.ss_sp = mystack;
|   altstack.ss_size = sizeof (mystack);
|   altstack.ss_flags = 0; /* no SS_DISABLE */
|   if (sigaltstack (&altstack, NULL) < 0)
|     exit (1);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset (&action.sa_mask);
|   action.sa_handler = &stackoverflow_handler;
|   action.sa_flags = SA_ONSTACK;
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* Save the current signal mask.  */
|   sigemptyset (&emptyset);
|   sigprocmask (SIG_BLOCK, &emptyset, &mainsigset);
|   /* Provoke two stack overflows in a row.  */
|   if (setjmp (mainloop) < 2)
|     {
|       recurse (0);
|       exit (2);
|     }
|   exit (0);
| }
configure:16893: result: no
configure:16915: checking whether a signal handler can be left through siglongjmp
configure:17011: gcc -o conftest.exe -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  -Zexe -Zomf -Zmap -Zargs-wild -Zbin-files -D__ST_MT_ERRNO__ -s conftest.c  >&5
configure:17015: $? = 0
configure:17021: ./conftest.exe
[1]   Killed                  ./conftest${ac_e...
configure:17025: $? = 137
configure: program exited with status 137
configure: failed program was:
| 
|       /* confdefs.h.  */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.6"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define CFG_FAULT "fault-none.h"
| #define CFG_MACHFAULT "fault-none.h"
| #define STACK_DIRECTION -1
| #define CFG_STACKVMA "stackvma-none.c"
| #define HAVE_GETRLIMIT 1
| #define HAVE_SETRLIMIT 1
| #define HAVE_SIGALTSTACK 1
| /* end confdefs.h.  */
| 
| #include <stdlib.h>
| #include <signal.h>
| #include <setjmp.h>
| 
| #if HAVE_SETRLIMIT
| # include <sys/types.h>
| # include <sys/time.h>
| # include <sys/resource.h>
| #endif
| #ifndef SIGSTKSZ
| # define SIGSTKSZ 16384
| #endif
| sigjmp_buf mainloop;
| int pass = 0;
| void stackoverflow_handler (int sig)
| {
|   pass++;
|   {  }
|   siglongjmp (mainloop, pass);
| }
| volatile int * recurse_1 (volatile int n, volatile int *p)
| {
|   if (n >= 0)
|     *recurse_1 (n + 1, p) += n;
|   return p;
| }
| int recurse (volatile int n)
| {
|   int sum = 0;
|   return *recurse_1 (n, &sum);
| }
| int main ()
| {
|   char mystack[SIGSTKSZ];
|   stack_t altstack;
|   struct sigaction action;
| #ifdef __BEOS__
|   /* On BeOS, this would hang, burning CPU time.  Better fail than hang.  */
|   exit (1);
| #endif
| #if defined HAVE_SETRLIMIT && defined RLIMIT_STACK
|   /* Before starting the endless recursion, try to be friendly to the user's
|      machine.  On some Linux 2.2.x systems, there is no stack limit for user
|      processes at all.  We don't want to kill such systems.  */
|   struct rlimit rl;
|   rl.rlim_cur = rl.rlim_max = 0x100000; /* 1 MB */
|   setrlimit (RLIMIT_STACK, &rl);
| #endif
|   /* Install the alternate stack.  */
|   altstack.ss_sp = mystack;
|   altstack.ss_size = sizeof (mystack);
|   altstack.ss_flags = 0; /* no SS_DISABLE */
|   if (sigaltstack (&altstack, NULL) < 0)
|     exit (1);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset (&action.sa_mask);
|   action.sa_handler = &stackoverflow_handler;
|   action.sa_flags = SA_ONSTACK;
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* Provoke two stack overflows in a row.  */
|   if (sigsetjmp (mainloop, 1) < 2)
|     {
|       recurse (0);
|       exit (2);
|     }
|   exit (0);
| }
configure:17043: result: no
configure:17051: checking whether a signal handler can be left through siglongjmp and sigaltstack
configure:17157: gcc -o conftest.exe -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  -Zexe -Zomf -Zmap -Zargs-wild -Zbin-files -D__ST_MT_ERRNO__ -s conftest.c  >&5
configure:17161: $? = 0
configure:17167: ./conftest.exe
[1]   Killed                  ./conftest${ac_e...
configure:17171: $? = 137
configure: program exited with status 137
configure: failed program was:
| 
|       /* confdefs.h.  */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.6"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define CFG_FAULT "fault-none.h"
| #define CFG_MACHFAULT "fault-none.h"
| #define STACK_DIRECTION -1
| #define CFG_STACKVMA "stackvma-none.c"
| #define HAVE_GETRLIMIT 1
| #define HAVE_SETRLIMIT 1
| #define HAVE_SIGALTSTACK 1
| /* end confdefs.h.  */
| 
| #include <stdlib.h>
| #include <signal.h>
| #include <setjmp.h>
| 
| #ifndef SS_ONSTACK
| #define SS_ONSTACK SA_ONSTACK
| #endif
| 
| #if HAVE_SETRLIMIT
| # include <sys/types.h>
| # include <sys/time.h>
| # include <sys/resource.h>
| #endif
| #ifndef SIGSTKSZ
| # define SIGSTKSZ 16384
| #endif
| sigjmp_buf mainloop;
| int pass = 0;
| void stackoverflow_handler (int sig)
| {
|   pass++;
|   { stack_t ss;
|    if (sigaltstack (NULL, &ss) >= 0)
|      {
|        ss.ss_flags &= ~SS_ONSTACK;
|        sigaltstack (&ss, NULL);
|      }
|    }
|   siglongjmp (mainloop, pass);
| }
| volatile int * recurse_1 (volatile int n, volatile int *p)
| {
|   if (n >= 0)
|     *recurse_1 (n + 1, p) += n;
|   return p;
| }
| int recurse (volatile int n)
| {
|   int sum = 0;
|   return *recurse_1 (n, &sum);
| }
| int main ()
| {
|   char mystack[SIGSTKSZ];
|   stack_t altstack;
|   struct sigaction action;
| #ifdef __BEOS__
|   /* On BeOS, this would hang, burning CPU time.  Better fail than hang.  */
|   exit (1);
| #endif
| #if defined HAVE_SETRLIMIT && defined RLIMIT_STACK
|   /* Before starting the endless recursion, try to be friendly to the user's
|      machine.  On some Linux 2.2.x systems, there is no stack limit for user
|      processes at all.  We don't want to kill such systems.  */
|   struct rlimit rl;
|   rl.rlim_cur = rl.rlim_max = 0x100000; /* 1 MB */
|   setrlimit (RLIMIT_STACK, &rl);
| #endif
|   /* Install the alternate stack.  */
|   altstack.ss_sp = mystack;
|   altstack.ss_size = sizeof (mystack);
|   altstack.ss_flags = 0; /* no SS_DISABLE */
|   if (sigaltstack (&altstack, NULL) < 0)
|     exit (1);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset (&action.sa_mask);
|   action.sa_handler = &stackoverflow_handler;
|   action.sa_flags = SA_ONSTACK;
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* Provoke two stack overflows in a row.  */
|   if (sigsetjmp (mainloop, 1) < 2)
|     {
|       recurse (0);
|       exit (2);
|     }
|   exit (0);
| }
configure:17189: result: no
configure:17197: checking whether a signal handler can be left through siglongjmp and setcontext
configure:17308: gcc -o conftest.exe -D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3  -Zexe -Zomf -Zmap -Zargs-wild -Zbin-files -D__ST_MT_ERRNO__ -s conftest.c  >&5
conftest.c:39:22: ucontext.h: No such file or directory
conftest.c: In function `stackoverflow_handler':
conftest.c:58: error: syntax error before "uc"
conftest.c:60: error: `uc' undeclared (first use in this function)
conftest.c:60: error: (Each undeclared identifier is reported only once
conftest.c:60: error: for each function it appears in.)
configure:17312: $? = 1
configure: program exited with status 1
configure: failed program was:
| 
|       /* confdefs.h.  */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.6"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define CFG_FAULT "fault-none.h"
| #define CFG_MACHFAULT "fault-none.h"
| #define STACK_DIRECTION -1
| #define CFG_STACKVMA "stackvma-none.c"
| #define HAVE_GETRLIMIT 1
| #define HAVE_SETRLIMIT 1
| #define HAVE_SIGALTSTACK 1
| /* end confdefs.h.  */
| 
| #include <stdlib.h>
| #include <signal.h>
| #include <setjmp.h>
| #include <ucontext.h>
| #ifndef SS_ONSTACK
| #define SS_ONSTACK SA_ONSTACK
| #endif
| 
| #if HAVE_SETRLIMIT
| # include <sys/types.h>
| # include <sys/time.h>
| # include <sys/resource.h>
| #endif
| #ifndef SIGSTKSZ
| # define SIGSTKSZ 16384
| #endif
| sigjmp_buf mainloop;
| int pass = 0;
| void stackoverflow_handler (int sig)
| {
|   pass++;
|   { static int fl;
|    static ucontext_t uc;
|    fl = 0;
|    if (getcontext(&uc) >= 0)
|      if (fl == 0)
|        if (uc.uc_stack.ss_flags & SS_ONSTACK)
|          {
|            uc.uc_stack.ss_flags &= ~SS_ONSTACK;
|            fl = 1;
|            setcontext(&uc);
|          }
|    }
|   siglongjmp (mainloop, pass);
| }
| volatile int * recurse_1 (volatile int n, volatile int *p)
| {
|   if (n >= 0)
|     *recurse_1 (n + 1, p) += n;
|   return p;
| }
| int recurse (volatile int n)
| {
|   int sum = 0;
|   return *recurse_1 (n, &sum);
| }
| int main ()
| {
|   char mystack[SIGSTKSZ];
|   stack_t altstack;
|   struct sigaction action;
| #ifdef __BEOS__
|   /* On BeOS, this would hang, burning CPU time.  Better fail than hang.  */
|   exit (1);
| #endif
| #if defined HAVE_SETRLIMIT && defined RLIMIT_STACK
|   /* Before starting the endless recursion, try to be friendly to the user's
|      machine.  On some Linux 2.2.x systems, there is no stack limit for user
|      processes at all.  We don't want to kill such systems.  */
|   struct rlimit rl;
|   rl.rlim_cur = rl.rlim_max = 0x100000; /* 1 MB */
|   setrlimit (RLIMIT_STACK, &rl);
| #endif
|   /* Install the alternate stack.  */
|   altstack.ss_sp = mystack;
|   altstack.ss_size = sizeof (mystack);
|   altstack.ss_flags = 0; /* no SS_DISABLE */
|   if (sigaltstack (&altstack, NULL) < 0)
|     exit (1);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset (&action.sa_mask);
|   action.sa_handler = &stackoverflow_handler;
|   action.sa_flags = SA_ONSTACK;
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* Provoke two stack overflows in a row.  */
|   if (sigsetjmp (mainloop, 1) < 2)
|     {
|       recurse (0);
|       exit (2);
|     }
|   exit (0);
| }
configure:17340: result: no
configure:17399: checking whether to activate relocatable installation
configure:17414: result: no
configure:17538: creating ./config.status

## ---------------------- ##
## Running config.status. ##
## ---------------------- ##

This file was extended by config.status, which was
generated by GNU Autoconf 2.62.  Invocation command line was

  CONFIG_FILES    = 
  CONFIG_HEADERS  = 
  CONFIG_LINKS    = 
  CONFIG_COMMANDS = 
  $ ./config.status 

on NEOIII

config.status:18657: creating Makefile
config.status:18657: creating src/Makefile
config.status:18657: creating src/sigsegv.h
config.status:18657: creating tests/Makefile
config.status:18657: creating config.h
config.status:18937: executing depfiles commands
config.status:18937: executing libtool commands

## ---------------- ##
## Cache variables. ##
## ---------------- ##

ac_cv_build=i386-pc-os2-emx
ac_cv_c_compiler_gnu=yes
ac_cv_emxos2=yes
ac_cv_env_CC_set=set
ac_cv_env_CC_value=gcc
ac_cv_env_CFLAGS_set=
ac_cv_env_CFLAGS_value=
ac_cv_env_CPPFLAGS_set=
ac_cv_env_CPPFLAGS_value=
ac_cv_env_CPP_set=
ac_cv_env_CPP_value=
ac_cv_env_LDFLAGS_set=
ac_cv_env_LDFLAGS_value=
ac_cv_env_LIBS_set=
ac_cv_env_LIBS_value=
ac_cv_env_build_alias_set=
ac_cv_env_build_alias_value=
ac_cv_env_host_alias_set=
ac_cv_env_host_alias_value=
ac_cv_env_target_alias_set=
ac_cv_env_target_alias_value=
ac_cv_exeext=.exe
ac_cv_func_getrlimit=yes
ac_cv_func_mincore=no
ac_cv_func_setrlimit=yes
ac_cv_func_sigaltstack=yes
ac_cv_header_dlfcn_h=yes
ac_cv_header_inttypes_h=yes
ac_cv_header_memory_h=yes
ac_cv_header_stdc=yes
ac_cv_header_stdint_h=yes
ac_cv_header_stdlib_h=yes
ac_cv_header_string_h=yes
ac_cv_header_strings_h=yes
ac_cv_header_sys_signal_h=yes
ac_cv_header_sys_stat_h=yes
ac_cv_header_sys_types_h=yes
ac_cv_header_unistd_h=yes
ac_cv_host=i386-pc-os2-emx
ac_cv_libext=lib
ac_cv_member_struct_sockaddr_in_sin_len=yes
ac_cv_objext=o
ac_cv_path_AR=/usr/bin/ar.exe
ac_cv_path_EGREP='U:/MOZTOOLS/grep.exe -E'
ac_cv_path_FALSE=/bin/false.exe
ac_cv_path_FGREP='U:/MOZTOOLS/grep.exe -F'
ac_cv_path_GREP=U:/MOZTOOLS/grep.exe
ac_cv_path_GZIP=e:/ecs/bin/gzip.exe
ac_cv_path_JAR=e:/programs/java142/bin/jar.exe
ac_cv_path_JAVAC=e:/programs/java142/bin/javac.exe
ac_cv_path_MAKE=/moztools/make.exe
ac_cv_path_MKDIR=/bin/mkdir.exe
ac_cv_path_MSGFMT=/usr/bin/msgfmt.exe
ac_cv_path_MV=/bin/mv.exe
ac_cv_path_PERL=u:/Perl/bin/perl.exe
ac_cv_path_PROG_SENDMAIL=e:/tcpip/bin/sendmail.exe
ac_cv_path_RM=/bin/rm.exe
ac_cv_path_SED=U:/MOZTOOLS/sed.exe
ac_cv_path_STRIP='echo '
ac_cv_path_TRUE=/bin/true.exe
ac_cv_path_XARGS=/moztools/xargs.exe
ac_cv_path_ZIP=e:/ecs/bin/zip.exe
ac_cv_path__PATH_AWK=/moztools/awk.exe
ac_cv_path__PATH_EGREP=e:/emx/bin/egrep.exe
ac_cv_path__PATH_PERL=u:/Perl/bin/perl.exe
ac_cv_path__PATH_SED=/moztools/sed.exe
ac_cv_path__PATH_SH=/moztools/ash.exe
ac_cv_path__PATH_SORT=/moztools/sort.exe
ac_cv_path___CHGRP=echo
ac_cv_path___CHOWN=echo
ac_cv_path___RSH=echo
ac_cv_path_install=u:/bin/INSTALL.exe
ac_cv_path_mkdir=u:/bin/mkdir.exe
ac_cv_path_uic=/dev/qt/trunk/bin/uic.exe
ac_cv_prog_AWK=gawk
ac_cv_prog_CPP='gcc -E'
ac_cv_prog_ac_ct_AR=ar.exe
ac_cv_prog_ac_ct_CC=gcc
ac_cv_prog_ac_ct_RANLIB=echo
ac_cv_prog_ac_ct_STRIP=strip
ac_cv_prog_cc_c89=
ac_cv_prog_cc_g=yes
ac_cv_prog_make_make_set=yes
ac_cv_type_stack_t=yes
am_cv_CC_dependencies_compiler_type=none
lt_cv_deplibs_check_method=unknown
lt_cv_file_magic_cmd='$MAGIC_CMD'
lt_cv_file_magic_test_file=
lt_cv_ld_reload_flag=-r
lt_cv_nm_interface='BSD nm'
lt_cv_objdir=.libs
lt_cv_path_LD=ld.exe
lt_cv_path_NM='U:/usr/bin/nm -B'
lt_cv_prog_compiler_c_o=yes
lt_cv_prog_compiler_pic_works=yes
lt_cv_prog_compiler_rtti_exceptions=no
lt_cv_prog_compiler_static_works=no
lt_cv_prog_gnu_ld=no
lt_cv_sys_global_symbol_pipe='sed -n -e '\''s/^.*[	 ]\([ABCDGIRSTW][ABCDGIRSTW]*\)[	 ][	 ]*_\([_A-Za-z][_A-Za-z0-9]*\)$/\1 _\2 \2/p'\'
lt_cv_sys_global_symbol_to_c_name_address='sed -n -e '\''s/^: \([^ ]*\) $/  {\"\1\", (void *) 0},/p'\'' -e '\''s/^[ABCDGIRSTW]* \([^ ]*\) \([^ ]*\)$/  {"\2", (void *) \&\2},/p'\'
lt_cv_sys_global_symbol_to_c_name_address_lib_prefix='sed -n -e '\''s/^: \([^ ]*\) $/  {\"\1\", (void *) 0},/p'\'' -e '\''s/^[ABCDGIRSTW]* \([^ ]*\) \(lib[^ ]*\)$/  {"\2", (void *) \&\2},/p'\'' -e '\''s/^[ABCDGIRSTW]* \([^ ]*\) \([^ ]*\)$/  {"lib\2", (void *) \&\2},/p'\'
lt_cv_sys_global_symbol_to_cdecl='sed -n -e '\''s/^T .* \(.*\)$/extern int \1();/p'\'' -e '\''s/^[ABCDGIRSTW]* .* \(.*\)$/extern char \1;/p'\'
lt_cv_sys_max_cmd_len=512
sv_cv_fault_aix=no
sv_cv_fault_bsd=no
sv_cv_fault_hpux_hppa=no
sv_cv_fault_hurd=no
sv_cv_fault_include=none
sv_cv_fault_irix=no
sv_cv_fault_linux_hppa=no
sv_cv_fault_linux_i386=no
sv_cv_fault_linux_i386_old=no
sv_cv_fault_linux_m68k=no
sv_cv_fault_linux_powerpc=no
sv_cv_fault_macosdarwin5_ppc=no
sv_cv_fault_macosdarwin7_ppc=no
sv_cv_fault_netbsd_alpha=no
sv_cv_fault_osf_alpha=no
sv_cv_fault_posix=no
sv_cv_func_getpagesize=yes
sv_cv_func_mmap_anon=no
sv_cv_func_mmap_anonymous=no
sv_cv_func_mmap_devzero=no
sv_cv_func_sysconf_pagesize=yes
sv_cv_have_sigsegv_recovery=no
sv_cv_have_stack_overflow_recovery=no
sv_cv_host=i386-pc-os2-emx
sv_cv_leave_handler_longjmp=no
sv_cv_leave_handler_longjmp_setcontext=no
sv_cv_leave_handler_longjmp_sigaltstack=no
sv_cv_leave_handler_siglongjmp=no
sv_cv_leave_handler_siglongjmp_setcontext=no
sv_cv_leave_handler_siglongjmp_sigaltstack=no
sv_cv_macro_pagesize=no
sv_cv_procfsvma=no
sv_cv_sigaltstack=no
sv_cv_stack_direction=-1
sv_cv_stack_direction_msg='grows down'

## ----------------- ##
## Output variables. ##
## ----------------- ##

ACLOCAL='${SHELL} U:/progetti/libsigsegv-2.6/build-aux/missing --run aclocal-1.10'
AMDEPBACKSLASH='\'
AMDEP_FALSE='#'
AMDEP_TRUE=''
AMTAR='tar.exe'
AR='ar.exe'
AUTOCONF='${SHELL} U:/progetti/libsigsegv-2.6/build-aux/missing --run autoconf'
AUTOHEADER='${SHELL} U:/progetti/libsigsegv-2.6/build-aux/missing --run autoheader'
AUTOMAKE='${SHELL} U:/progetti/libsigsegv-2.6/build-aux/missing --run automake-1.10'
AWK='gawk'
CC='gcc'
CCDEPMODE='depmode=none'
CFG_HANDLER='handler-none.c'
CFG_LEAVE='leave-none.c'
CFG_STACKVMA='stackvma-none.c'
CFLAGS='-D__EMX__ -Dunix  -D__ST_MT_ERRNO__ -O3 -march=pentium3'
CPP='gcc -E'
CPPFLAGS=''
CYGPATH_W='echo'
DEFS='-DHAVE_CONFIG_H'
DEPDIR='.deps'
DSYMUTIL=''
DUMPBIN=''
ECHO_C=''
ECHO_N='-n'
ECHO_T=''
EGREP='U:/MOZTOOLS/grep.exe -E'
EXEEXT='.exe'
FAULT_CONTEXT='void'
FAULT_CONTEXT_INCLUDE=''
FGREP='U:/MOZTOOLS/grep.exe -F'
GREP='U:/MOZTOOLS/grep.exe'
HAVE_SIGSEGV_RECOVERY='0'
HAVE_STACK_OVERFLOW_RECOVERY='0'
INSTALL_DATA='${INSTALL} -m 644'
INSTALL_PROGRAM='${INSTALL}'
INSTALL_SCRIPT='${INSTALL}'
INSTALL_STRIP_PROGRAM='$(install_sh) -c -s'
LD='ld.exe'
LDFLAGS='-Zexe -Zomf -Zmap -Zargs-wild -Zbin-files -D__ST_MT_ERRNO__ -s'
LIBOBJS=''
LIBS=''
LIBTOOL='$(SHELL) $(top_builddir)/libtool'
LIPO=''
LN_S='ln -s'
LTLIBOBJS=''
MAKEINFO='makeinfo --no-split'
MKDIR_P='u:/bin/mkdir.exe -p'
NM='U:/usr/bin/nm -B'
NMEDIT=''
OBJEXT='o'
OTOOL64=''
OTOOL=''
PACKAGE='libsigsegv'
PACKAGE_BUGREPORT=''
PACKAGE_NAME=''
PACKAGE_STRING=''
PACKAGE_TARNAME=''
PACKAGE_VERSION=''
PATH_SEPARATOR=';'
PLATFORM='i386-pc-os2-emx'
RANLIB='echo'
RELOCATABLE='no'
SED='U:/MOZTOOLS/sed.exe'
SET_MAKE=''
SHELL='sh'
STRIP='strip'
VERSION='2.6'
ac_ct_CC='gcc'
ac_ct_DUMPBIN=''
am__fastdepCC_FALSE=''
am__fastdepCC_TRUE='#'
am__include='include'
am__isrc=''
am__leading_dot='.'
am__quote=''
am__tar='${AMTAR} chof - "$$tardir"'
am__untar='${AMTAR} xf -'
bindir='${exec_prefix}/bin'
build='i386-pc-os2-emx'
build_alias=''
build_cpu='i386'
build_os='os2-emx'
build_vendor='pc'
datadir='${datarootdir}'
datarootdir='${prefix}/share'
docdir='${datarootdir}/doc/${PACKAGE}'
dvidir='${docdir}'
exec_prefix='${prefix}'
host='i386-pc-os2-emx'
host_alias=''
host_cpu='i386'
host_os='os2-emx'
host_vendor='pc'
htmldir='${docdir}'
includedir='${prefix}/include'
infodir='${datarootdir}/info'
install_sh='$(SHELL) U:/progetti/libsigsegv-2.6/build-aux/install-sh'
libdir='${exec_prefix}/lib'
libexecdir='${exec_prefix}/libexec'
localedir='${datarootdir}/locale'
localstatedir='${prefix}/var'
lt_ECHO='echo'
mandir='${datarootdir}/man'
mkdir_p='u:/bin/mkdir.exe -p'
oldincludedir='/usr/include'
pdfdir='${docdir}'
prefix='/usr/local'
program_transform_name='s,x,x,'
psdir='${docdir}'
sbindir='${exec_prefix}/sbin'
sharedstatedir='${prefix}/com'
sysconfdir='${prefix}/etc'
target_alias=''

## ----------- ##
## confdefs.h. ##
## ----------- ##

#define PACKAGE_NAME ""
#define PACKAGE_TARNAME ""
#define PACKAGE_VERSION ""
#define PACKAGE_STRING ""
#define PACKAGE_BUGREPORT ""
#define PACKAGE "libsigsegv"
#define VERSION "2.6"
#define STDC_HEADERS 1
#define HAVE_SYS_TYPES_H 1
#define HAVE_SYS_STAT_H 1
#define HAVE_STDLIB_H 1
#define HAVE_STRING_H 1
#define HAVE_MEMORY_H 1
#define HAVE_STRINGS_H 1
#define HAVE_INTTYPES_H 1
#define HAVE_STDINT_H 1
#define HAVE_UNISTD_H 1
#define HAVE_DLFCN_H 1
#define LT_OBJDIR ".libs/"
#define HAVE_SYS_SIGNAL_H 1
#define CFG_SIGNALS "signals.h"
#define HAVE_UNISTD_H 1
#define HAVE_GETPAGESIZE 1
#define HAVE_SYSCONF_PAGESIZE 1
#define CFG_FAULT "fault-none.h"
#define CFG_MACHFAULT "fault-none.h"
#define STACK_DIRECTION -1
#define CFG_STACKVMA "stackvma-none.c"
#define HAVE_GETRLIMIT 1
#define HAVE_SETRLIMIT 1
#define HAVE_SIGALTSTACK 1
#define CFG_LEAVE "leave-none.c"
#define CFG_HANDLER "handler-none.c"

configure: exit 0
